@model RestaurantManager.ViewModels.ScheduleTemplateEditViewModel

@{
    ViewData["Title"] = "Edytuj Szablon Grafiku";
}

<h1>@ViewData["Title"]: @Model.Name</h1>
<hr />

<form asp-action="Edit">
    <div asp-validation-summary="All" class="text-danger mb-3"></div>
    <input type="hidden" asp-for="Id" />

    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>

    <h4>Wymagane zmiany (sloty)</h4>
    <table class="table table-sm" id="slotsTable">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(m => m.Slots[0].DayOfWeek)</th>
                <th>@Html.DisplayNameFor(m => m.Slots[0].StartTime)</th>
                <th>@Html.DisplayNameFor(m => m.Slots[0].EndTime)</th>
                <th>@Html.DisplayNameFor(m => m.Slots[0].PositionTagId)</th>
                <th>@Html.DisplayNameFor(m => m.Slots[0].RequiredEmployeeCount)</th>
                <th>Akcje</th>
            </tr>
        </thead>
        <tbody>
            @* Pętla po istniejących slotach *@
            @for (int i = 0; i < Model.Slots.Count; i++)
            {
                <tr>
                    <td>
                        @* Ukryte pole dla ID istniejącego slotu *@
                        <input type="hidden" asp-for="Slots[i].Id" />
                        @* Ukryte pole flagi usunięcia *@
                        <input type="hidden" asp-for="Slots[i].IsMarkedForDeletion" class="delete-flag" />

                        <select asp-for="Slots[i].DayOfWeek" class="form-control form-control-sm" asp-items="ViewBag.DayOfWeek"></select>
                    </td>
                    <td><input asp-for="Slots[i].StartTime" class="form-control form-control-sm" /></td>
                    <td><input asp-for="Slots[i].EndTime" class="form-control form-control-sm" /></td>
                    <td><select asp-for="Slots[i].PositionTagId" class="form-control form-control-sm" asp-items="ViewBag.PositionTagId"><option value="">-- Wybierz --</option></select></td>
                    <td><input asp-for="Slots[i].RequiredEmployeeCount" type="number" min="1" class="form-control form-control-sm" /></td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm delete-slot-btn">Usuń</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" id="addSlotBtn" class="btn btn-success btn-sm mb-3">Dodaj nową zmianę</button>

    <div class="form-group mt-3">
        <input type="submit" value="Zapisz zmiany w szablonie" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Powrót do listy szablonów</a>
    </div>

</form>

@* Ukryty szablon wiersza dla nowych slotów *@
<table style="display: none;">
    <tr id="newSlotTemplate">
        <td>
            <input type="hidden" name="Slots.Index" value="__INDEX__" /> @* Pomocnik dla bindowania listy *@
            <input type="hidden" name="Slots[__INDEX__].Id" value="0" /> @* ID=0 oznacza nowy slot *@
            <input type="hidden" name="Slots[__INDEX__].IsMarkedForDeletion" value="false" class="delete-flag" />

            <select name="Slots[__INDEX__].DayOfWeek" class="form-control form-control-sm" asp-items="ViewBag.DayOfWeek"></select>
        </td>
        <td><input name="Slots[__INDEX__].StartTime" type="time" class="form-control form-control-sm" value="09:00" /></td>
        <td><input name="Slots[__INDEX__].EndTime" type="time" class="form-control form-control-sm" value="17:00" /></td>
        <td><select name="Slots[__INDEX__].PositionTagId" class="form-control form-control-sm" asp-items="ViewBag.PositionTagId"><option value="">-- Wybierz --</option></select></td>
        <td><input name="Slots[__INDEX__].RequiredEmployeeCount" type="number" min="1" value="1" class="form-control form-control-sm" /></td>
        <td>
            <button type="button" class="btn btn-danger btn-sm delete-slot-btn">Usuń</button>
        </td>
    </tr>
</table>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            let slotIndex = @Model.Slots.Count; // Zaczynamy indeksowanie od liczby istniejących slotów

            $("#addSlotBtn").click(function () {
                // Sklonuj szablon wiersza
                let newRow = $("#newSlotTemplate").clone().removeAttr("id");

                // Zamień placeholdery __INDEX__ na aktualny indeks
                newRow.html(newRow.html().replace(/__INDEX__/g, slotIndex));

                // Dodaj nowy wiersz do tabeli
                $("#slotsTable tbody").append(newRow);

                // Zwiększ indeks dla następnego wiersza
                slotIndex++;
            });

            // Obsługa przycisku "Usuń"
            $("#slotsTable").on("click", ".delete-slot-btn", function () {
                let row = $(this).closest("tr");
                let deleteFlagInput = row.find(".delete-flag");

                // Oznacz do usunięcia (lub cofnij oznaczenie)
                if (deleteFlagInput.val() === "false") {
                    deleteFlagInput.val("true");
                    row.addClass("table-danger"); // Wizualne oznaczenie
                    $(this).text("Cofnij").removeClass("btn-danger").addClass("btn-warning");
                     // Wyłącz pola w usuniętym wierszu, aby nie były walidowane
                    row.find("input, select").prop('disabled', true);
                     // Ale musimy zostawić włączone ukryte pola (Id, Index, IsMarked...)
                    row.find("input[type='hidden']").prop('disabled', false);

                } else {
                    deleteFlagInput.val("false");
                    row.removeClass("table-danger");
                    $(this).text("Usuń").removeClass("btn-warning").addClass("btn-danger");
                     // Włącz pola z powrotem
                    row.find("input, select").prop('disabled', false);
                }
            });

             // Jeśli wiersz jest już oznaczony do usunięcia (np. po błędzie walidacji), zastosuj styl
             $("#slotsTable tbody tr").each(function() {
                 let row = $(this);
                 let deleteFlagInput = row.find(".delete-flag");
                 if (deleteFlagInput.val() === "true") {
                      row.addClass("table-danger");
                      row.find(".delete-slot-btn").text("Cofnij").removeClass("btn-danger").addClass("btn-warning");
                      row.find("input, select").prop('disabled', true);
                      row.find("input[type='hidden']").prop('disabled', false);
                 }
             });

        });
    </script>
}